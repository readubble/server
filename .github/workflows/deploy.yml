name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: capstone-bwageul-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: bwageul
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: capstone-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      working-directory: ./server/
    
    steps:
  
      - name: Checkout
        uses: actions/checkout@v3
  

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          
      - name: Generate appliation properties file
        if: contains(github.ref, 'main')
        run: |
          touch ./server/src/main/resources/application.yml
          echo "${{secrets.APPLICATION}}" > ./server/src/main/resources/application.yml
          
      - name: Generate JWT properties file
        if: contains(github.ref, 'main')
        run: |
          touch ./server/src/main/java/com/capstone/server/JWT/JwtProperties.java
          echo "${{secrets.JWT}}" >./server/src/main/java/com/capstone/server/JWT/JwtProperties.java

      - name: Generate DictKey file
        if: contains(github.ref, 'main')
        run: |
          touch ./server/src/main/java/com/capstone/server/Etc/DictKey.java
          echo "${{secrets.DictKey}}" >./server/src/main/java/com/capstone/server/Etc/DictKey.java

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
                  
  
      - name: Build with Gradle Except Test
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{env.working-directory}}
        
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip ./server
        shell: bash
        
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      
      - name: Upload to AWS S3
        run: |
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
    
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{env.S3_BUCKET_NAME}},bundleType=zip,key=$GITHUB_SHA.zip
